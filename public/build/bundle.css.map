{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "CirclePack.html.svelte",
    "Key.svelte",
    "Radar.svelte",
    "FounderMap.svelte",
    "ReachRadar.svelte",
    "SupportMap.svelte",
    "Header.svelte",
    "Intro.svelte",
    "PreLoader.svelte",
    "ChartTitle.svelte",
    "Icon.svelte",
    "Ripple.svelte",
    "Smoke.svelte",
    "Stat.svelte",
    "_Layout.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?');\n\t\t}\n\t\tif (b.height <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { width, height, xScale, yRange } = getContext('LayerCake');\n\n\texport let gridlines = true;\n\texport let tickMarks = false;\n\texport let formatTick = d => d;\n\texport let baseline = false;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let xTick = undefined;\n\texport let yTick = 16;\n\texport let dxTick = 0;\n\texport let dyTick = 0;\n\n\t$: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$xScale.domain() :\n\t\t\ttypeof ticks === 'function' ?\n\t\t\t\tticks($xScale.ticks()) :\n\t\t\t\t\t$xScale.ticks(ticks);\n\n\tfunction textAnchor(i) {\n\t\tif (snapTicks === true) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 'start';\n\t\t\t}\n\t\t\tif (i === tickVals.length - 1) {\n\t\t\t\treturn 'end';\n\t\t\t}\n\t\t}\n\t\treturn 'middle';\n\t}\n</script>\n\n<g class='axis x-axis' class:snapTicks>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{ i }' transform='translate({$xScale(tick)},{$yRange[0]})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line class=\"gridline\" y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n\t\t\t{/if}\n\t\t\t{#if tickMarks === true}\n\t\t\t\t<line class=\"tick-mark\" y1='{0}' y2='{6}' x1='{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}' x2='{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}'></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}\"\n\t\t\t\ty='{yTick}'\n\t\t\t\tdx='{dxTick}'\n\t\t\t\tdy='{dyTick}'\n\t\t\t\ttext-anchor='{textAnchor(i)}'>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n\t{#if baseline === true}\n\t\t<line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n\t{/if}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\tline,\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.tick .tick-mark,\n\t.baseline {\n\t\tstroke-dasharray: 0;\n\t}\n\t/* This looks slightly better */\n\t.axis.snapTicks .tick:last-child text {\n\t\ttransform: translateX(3px);\n\t}\n\t.axis.snapTicks .tick.tick-0 text {\n\t\ttransform: translateX(-3px);\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding, xRange, yScale } = getContext('LayerCake');\n\n\texport let ticks = 4;\n\texport let tickMarks = false;\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = 0;\n\texport let dyTick = -4;\n\texport let textAnchor = 'start';\n\n\t$: isBandwidth = typeof $yScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$yScale.domain() :\n\t\t\ttypeof ticks === 'function' ?\n\t\t\t\tticks($yScale.ticks()) :\n\t\t\t\t\t$yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tclass=\"gridline\"\n\t\t\t\t\tx2='100%'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t{#if tickMarks === true}\n\t\t\t\t<line\n\t\t\t\t\tclass='tick-mark'\n\t\t\t\t\tx1='0'\n\t\t\t\t\tx2='{isBandwidth ? -6 : 6}'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx='{xTick}'\n\t\t\t\ty='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}'\n\t\t\t\tdx='{isBandwidth ? -9 : dxTick}'\n\t\t\t\tdy='{isBandwidth ? 4 : dyTick}'\n\t\t\t\tstyle=\"text-anchor:{isBandwidth ? 'end' : textAnchor};\"\n\t\t\t>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t}\n\t.tick .gridline {\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}</style>\n",
    "<script>\n\timport { stratify, pack, hierarchy } from 'd3-hierarchy'\n\timport { getContext } from 'svelte';\n\timport { format } from 'd3-format';\n\n\tconst { width, height, data } = getContext('LayerCake');\n\n  // export let name = '';\n\texport let idKey = 'id';\n\texport let parentKey = undefined;\n\texport let valueKey = 'value';\n\texport let labelVisibilityThreshold = r => r > 50;\n\texport let fill = '#fff';\n\texport let stroke = '#fff';\n\texport let textColor = '#333';\n\texport let sortBy = (a, b) => b.value - a.value; // 'depth' is also a popular choice\n\n  \texport let circlePadding = 0;\n\n  /* --------------------------------------------\n   * This component will automatically group your data\n   * into one group if no `parentKey` was passed in.\n   * Stash $data here so we can add our own parent\n   * if there's no `parentKey`\n   */\n  let parent = {};\n  $: dataset = $data;\n\n  $: if (parentKey === undefined) {\n    parent = { [idKey]: 'all' };\n    dataset = [...dataset, parent]\n  }\n\n\t$: stratifier = stratify()\n\t\t.id(d => d[idKey])\n    .parentId(d => {\n      if (d[idKey] === parent[idKey]) return '';\n      return d[parentKey] || parent[idKey];\n    });\n\n\t$: packer = pack()\n\t\t.size([$width, $height])\n\t\t.padding(circlePadding);\n\n\t$: stratified = stratifier(dataset);\n\n\t$: root = hierarchy(stratified)\n\t\t.sum((d, i) => {\n\t\t\treturn d.data[valueKey] || 1;\n\t\t})\n\t\t.sort(sortBy);\n\n\t$: packed = packer(root);\n\n  \t$: descendants = packed.descendants();\n\n\tconst titleCase = d => d.replace(/^\\w/, w => w.toUpperCase());\n\tconst commas = format(',');\n</script>\n\n<div class=\"circle-pack\" data-has-parent-key=\"{parentKey !== undefined}\">\n\t{#each descendants as d}\n\t\t<div\n      class=\"circle-group\"\n      data-id=\"{d.data.id}\"\n      data-visible=\"{labelVisibilityThreshold(d.r)}\"\n    >\n\t\t\t<div\n\t\t\t\tclass=\"circle\"\n\t\t\t\tstyle=\"left:{d.x}px;top:{d.y}px;width:{d.r * 2}px;height:{d.r * 2}px;background-color:{fill};border: 1px solid {stroke};\"\n\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"text-group\"\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\tcolor:{textColor};\n\t\t\t\t\t\tleft:{d.x}px;\n\t\t\t\t\t\ttop:{d.y - (labelVisibilityThreshold(d.r) ? 0 : (d.r + 4))}px;\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"text\">{titleCase(d.data.id)}</div>\n\t\t\t\t\t{#if d.data.data[valueKey]}\n\t\t\t\t\t\t<div class=\"text value\" >{commas(d.data.data[valueKey])}</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t{/each}\n</div>\n\n<style>\n\t.circle-pack {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\t.circle,\n\t.text-group {\n\t\tposition: absolute;\n\t}\n  .circle {\n\t\ttransform: translate(-50%, -50%);\n  }\n\t/* Hide the root node if we want, useful if we are creating our own root */\n  .circle-pack[data-has-parent-key=\"false\"]\t.circle-group[data-id=\"all\"] {\n\t\tdisplay: none;\n\t}\n  /* .circle-group:hover {\n    z-index: 9999;\n  } */\n\t.circle-group[data-visible=\"false\"] .text-group {\n\t\tdisplay: none;\n\t\tpadding: 4px 7px;\n\t\tbackground: #fff;\n\t\tborder: 1px solid #ccc;\n\t\ttransform: translate(-50%, -100%);\n    top: -4px;\n\t}\n  .circle-group[data-visible=\"false\"]:hover .text-group {\n\t\tz-index: 999;\n\t\tdisplay: block !important;\n\t}\n\t.circle-group[data-visible=\"false\"]:hover .circle {\n\t\tborder-color: #000 !important;\n\t}\n\t.text-group {\n\t\twidth: auto;\n    top: 50%;\n    left: 50%;\n\t\ttext-align: center;\n\t\ttransform: translate(-50%, -50%);\n\t\twhite-space: nowrap;\n\t\tpointer-events: none;\n\t\tcursor: pointer;\n\t\tline-height: 13px;\n\t}\n\t.text {\n\t\twidth: 100%;\n\t\tfont-size: 11px;\n\t\t/* text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff; */\n\t}\n\t.text.value{\n\t\tfont-size: 11px;\n\t}\n\t.circle {\n    border-radius: 50%;\n    top: 0;\n    left: 0;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\t/* --------------------------------------------\n\t * Can be: \"circle\", \"line\" or \"square\"\n\t */\n\texport let shape = 'square';\n\n\t/* --------------------------------------------\n\t * Can be \"start\", \"center\" or \"end\"\n\t */\n\texport let align = 'center';\n\n\t/* --------------------------------------------\n\t * Pass in lookup values\n\t */\n\texport let lookup = undefined;\n\n\t/* --------------------------------------------\n\t * Capitalize the series name: `true` or `false`\n\t */\n\texport let capitalize = true;\n\n\tconst { zDomain, zScale } = getContext('LayerCake');\n\n\tfunction cap (val) {\n\t\treturn String(val).replace(/^\\w/, d => d.toUpperCase());\n\t}\n\n\tfunction displayName (val) {\n\t\tif (lookup) {\n\t\t\treturn lookup[val] || val;\n\t\t}\n\t\treturn capitalize === true ? cap(val) : val;\n\t}\n</script>\n\n<style>\n\t.key {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-wrap: wrap;\n\t\tmax-height: 120px;\n\t\tbackground-color: rgb(186, 211, 216);\n\t\tborder-radius: 10px;\n\t\tpadding: 1em;\n\t}\n\t.key-item {\n\t\tmargin-right: 14px;\n\t\tmargin-bottom: 8px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t.chip {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tmargin-right: 4px;\n\t}\n\t.chip__circle {\n\t\tborder-radius: 50%;\n\t}\n\t.chip__line:after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tborder-width: 3px;\n\t\twidth: 14px;\n\t\ttransform: rotate(-45deg);\n\t\ttransform-origin: 14px 5px;\n\t}\n\t.name {\n\t\tdisplay: inline;\n\t\tfont-size: 14px;\n\n\t}</style>\n\n<div class='key' style=\"justify-content: {align === 'end' ? 'flex-end': align};\">\n\t{#each $zDomain as item}\n\t<div class='key-item'>\n\t\t<div\n\t\t\tclass='chip chip__{shape}'\n\t\t\tstyle='background: {\n\t\t\t\tshape === `line` ?\n\t\t\t\t`linear-gradient(-45deg, #ffffff 40%, ${$zScale(item)} 41%, ${$zScale(item)} 59%, #ffffff 60%)`\n\t\t\t\t: $zScale(item)};'\n\t\t></div>\n\t\t<div class='name'>{displayName(item)}</div>\n\t</div>\n\t{/each}\n</div>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { line, curveCardinalClosed } from 'd3-shape';\n\n\texport let color;\n\n\tconst { data, width, height, xGet, config } = getContext('LayerCake');\n\n\t$: angleSlice = (Math.PI * 2) / $config.x.length;\n\n\t$: path = line()\n\t\t.curve(curveCardinalClosed)\n\t\t.x((d, i) => d * Math.cos(angleSlice * i - Math.PI / 2))\n\t\t.y((d, i) => d * Math.sin(angleSlice * i - Math.PI / 2));\n\n\t$: cx = (circleR, i) => circleR * Math.cos(angleSlice * i - Math.PI / 2)\n\t$: cy = (circleR, i) => circleR * Math.sin(angleSlice * i - Math.PI / 2)\n\n\t/* The non-D3 line generator way. Use `d={path}` in the template below */\n\t// $: path = 'M' + $data\n\t// \t.map(d => {\n\t// \t\treturn $rGet(d).map((val, i) => {\n\t// \t\t\treturn [\n\t// \t\t\t\tval * Math.cos(angleSlice * i - Math.PI / 2),\n\t// \t\t\t\tval * Math.sin(angleSlice * i - Math.PI / 2)\n\t// \t\t\t].join(',');\n\t// \t\t});\n\t// \t})\n\t// \t.join('L') + 'z';\n</script>\n\n<g\n\ttransform=\"translate({ $width / 2 }, { $height / 2 })\"\n>\n\t{#each $data as row}\n\t\t<!-- Draw a line connecting all the dots -->\n\t\t<path\n\t\t\tclass='path-line'\n\t\t\td='{path($xGet(row))}'\n\t\t\tstroke={color}\n\t\t\tfill={color}\n\t\t\tfill-opacity=\"0.5\"\n\t\t></path>\n\n\t\t<!-- Plot each dots -->\n\t\t{#each $xGet(row) as circleR, i}\n\t\t\t<circle\n\t\t\t\tcx={cx(circleR, i)}\n\t\t\t\tcy={cy(circleR, i)}\n\t\t\t\tr=\"4.5\"\n\t\t\t\tfill={color}\n\t\t\t\tstroke=\"#fff\"\n\t\t\t\tstroke-width=\"1\"\n\t\t\t></circle>\n\t\t{/each}\n\t{/each}\n</g>\n\n<style>\n\t.path-line {\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 2;\n\t}</style>\n",
    "<script>\n\timport { geoAlbersUsa, geoPath } from \"d3-geo\";\n\timport { scaleQuantize, scaleSequential, scaleLinear } from \"d3-scale\";\n\timport { schemeGnBu } from 'd3-scale-chromatic';\n\timport { extent, rollup } from \"d3-array\";\n\timport { csvParse } from 'd3-dsv'\n\timport { onMount } from \"svelte\";\n\timport { feature } from \"topojson\";\n\timport ChartTitle from '../tools/ChartTitle.svelte';\n\t//import Icon from '../tools/Icon.svelte';\n\n\texport let data;\n\texport let title; \n\texport let description;\n\n\tconst citiesURL = 'https://gist.githubusercontent.com/curran/13d30e855d48cdd6f22acdf0afe27286/raw/0635f14817ec634833bb904a47594cc2f5f9dbf8/worldcities_clean.csv';\n\tconst stateURL = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\"\n\n\tlet newList = data;\n\tlet mapData = [];\n\t$: cities = [];\n\tconst colors = schemeGnBu[8]\n\tlet colorScale = () => {};\n\tlet width = 1200\n\tlet height = width * 0.7\n\tlet showHide = 'true';\n\t\n\tlet summary = rollup(data, v => v.length, d => d.state)\n\tconsole.log(data)\n\tlet orgExtent = extent(summary, d => d[1])\n\t\n\t$: colorScale = scaleQuantize()\n\t\t.domain(orgExtent)\n\t\t.range(colors);\n\n\tlet cityCount = rollup(data, v => v.length, d => d.city)\n\tlet cityExtent = extent(cityCount, d => d[1])\n\tconst radiusScale = scaleLinear()\n\t\t.domain(cityExtent)\n\t\t.range([1,30])\n\n\t$: getColor = function (feature) {\n\t\tlet number = summary.get(feature.properties.name)\n\t\tlet color = colorScale(number)\n\t\tif (color) {\n\t\t\treturn color\n\t\t} else {\n\t\t\treturn \"#000\"\n\t\t}\n\t}\n\n\tconst filteronState = function(state) {\n\t\tnewList = data.filter(d => d.state == state)\n\t\treturn newList\n\t}\n\n\tconst projectionAlbersUsa = geoAlbersUsa().scale(950)\n\tlet currentProj = projectionAlbersUsa;\n\t\n\tlet path = geoPath().projection(currentProj);\n\n\tconst makePoints = function(lng, lat) {\n\t\tlet points = currentProj([lng, lat])\n\t\treturn points\n\t}\n\n\tconst getRadius = function(cityName) {\n\t\tlet org = data.filter(d => d.city === cityName)\n\t\tlet radius = org.length\n\t\treturn radiusScale(radius)\n\t}\n\n  \n\tonMount(async function() {\n\t\tconst stateResponse = await fetch(\n\t\t\tstateURL\n\t\t);\n\t\tconst json = await stateResponse.json();\n\n\t\tconst cityResponse = await fetch(\n\t\t\tcitiesURL\n\t\t);\n\t\tconst csv = await cityResponse.text();\n\t\tlet parsed = csvParse(csv)\n\t\t$: cities = parsed.filter(d => d.country === \"United States\")\n\n\t\tconst topoData = feature(json, json.objects.states);\n\t\tconst land = {\n\t\t...topoData,\n\t\t};\n\t\tmapData = land.features;\n\t});\n</script>\n  \n<style lang=\"scss\">.chart-section {\n  background-color: #bdbed1; }\n\n#map-wrapper {\n  width: 1000px;\n  height: 500px; }\n\n.stateShape {\n  stroke: #708090;\n  stroke-width: 0.15;\n  transition: all .5s ease-in-out; }\n\n.stateShape:hover {\n  stroke: #E26D5A;\n  stroke-width: 1.5px; }\n\n.not-filled {\n  opacity: .2;\n  pointer-events: none; }\n\n.cities {\n  opacity: .7; }</style>\n  \n<section class=\"chart-section\">\n\t<ChartTitle \n\t\ttitle={title}\n\t\tdescription= {description}\n\t/>\n\t<div class=\"input-container\">\n\t\t<label><input type=\"radio\" bind:group={showHide} value=\"true\"/>Hide Cities</label>\n\t\t<label><input type=\"radio\" bind:group={showHide} value=\"false\"/>Show Cities</label>\n\t</div>\n\t<div class=\"chart-container\" id=\"map-wrapper\" bind:clientWidth=\"{width}\">\n\t\t<svg style=\"{`width: ${width}px; height: ${height}px`}\">\n\t\t\t<g class=\"states\">\n\t\t\t\t{#each mapData as feature}\n\t\t\t\t\t<path\n\t\t\t\t\td={path(feature)}\n\t\t\t\t\tid={feature.properties.name}\n\t\t\t\t\tclass=\"stateShape {getColor(feature) != \"#000\" ? \"filled\" : \"not-filled\"}\"\n\t\t\t\t\tfill={getColor(feature)} \n\t\t\t\t\ton:click={(event) => { filteronState(event.target.id)}}\n\t\t\t\t\t/>\n\t\t\t\t{/each}\n\t\t\t</g>\n\t\t\t{#if showHide === 'false'}\n\t\t\t<g class=\"cities\">\n\t\t\t\t{#each cities as city}\n\t\t\t\t\t{#if data.some(org => org.city === city.city)}\n\t\t\t\t\t\t<circle className=\"citiPop\" cx={makePoints(city.lng, city.lat)[0]} cy={makePoints(city.lng, city.lat)[1]} r={getRadius(city.city)} />\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t</g>\n\t\t\t{/if}\n\t\t</svg>\n\t</div>\n</section>",
    "<script>\n    import { LayerCake, Svg } from 'layercake';\n    import { scaleLinear } from 'd3-scale';\n    import ChartTitle from '../tools/ChartTitle.svelte'\n    import Radar from '../cake-components/Radar.svelte';\n    import AxisRadial from '../cake-components/AxisRadial.svelte';\nimport { rollup } from 'd3-array';\n\n    export let data;\n    export let title;\n    export let description;\n\n    const xKey = ['Local', 'Regional', 'National', 'International'];\n    const colors = [\"#FAAB18\", \"#00B8D1\", \"#1D1E68\", \"#E26D5A\"]\n    let summary = rollup(data, v => v.length, d => d.type, e => e.reach)\n    let flatData = Array.from(summary, ([type, value]) => ({ type, value }))\n    let formatData = flatData.map(group => ({\n        type: group.type,\n        National: group.value.get(\"National\"),\n        Local: group.value.get(\"Local\"),\n        Regional: group.value.get(\"Regional\"),\n        International: group.value.get(\"International\"),\n    }))\n    console.log(formatData)\n    let firstChart = formatData.filter(d => d.type === \"Accelerator/Incubator\")\n    let secondChart = formatData.filter(d => d.type === \"VC Firm/Angel Association\")\n    let thirdChart = formatData.filter(d => d.type === \"Talent/Workforce\")\n    let fourthChart = formatData.filter(d => d.type === \"Ecosystem Builder\")\n\n    let cleanSummmary = function(chartData) {\n      chartData = chartData.map(group => ({\n        type: group.type,\n        National: group.National || 0,\n        Local: group.Local || 0,\n        Regional: group.Regional || 0,\n        International: group.International || 0,\n      }))\n      return chartData\n    }\n\n    firstChart = cleanSummmary(firstChart)\n    secondChart = cleanSummmary(secondChart)\n    thirdChart = cleanSummmary(thirdChart)\n    fourthChart = cleanSummmary(fourthChart)\n    \n</script>\n\n<style lang=\"scss\">#radar-container {\n  display: flex;\n  flex-wrap: wrap; }\n  #radar-container #radar-chart {\n    height: 200px;\n    width: 350px;\n    margin-bottom: 32px; }</style>\n\n<section  class=\"chart-section\">\n    <ChartTitle \n        title={title}\n        description={description}\n    />\n    <div id=\"radar-container\">\n      <figure id=\"radar-chart\" class=\"chart-container\">\n        <h3>{firstChart[0].type}</h3>\n        <LayerCake\n          padding={{ top: 15, right: 0, bottom: 30, left: 0 }}\n          x={xKey}\n          xDomain={[0, 15]}\n          xRange={({ height }) => [0, height / 2]}\n          data={firstChart}\n        >\n          <Svg>\n            <AxisRadial/>\n            <Radar color={colors[3]}/>\n          </Svg>\n        </LayerCake>\n      </figure>\n      <figure id=\"radar-chart\" class=\"chart-container\">\n        <h3>{secondChart[0].type}</h3>\n        <LayerCake\n          padding={{ top: 15, right: 0, bottom: 30, left: 0 }}\n          x={xKey}\n          xDomain={[0, 15]}\n          xRange={({ height }) => [0, height / 2]}\n          data={secondChart}\n        >\n          <Svg>\n            <AxisRadial />\n            <Radar color={colors[0]}/>\n          </Svg>\n        </LayerCake>\n      </figure>\n      <figure id=\"radar-chart\" class=\"chart-container\">\n        <h3>{thirdChart[0].type}</h3>\n        <LayerCake\n          padding={{ top: 0, right: 0, bottom: 30, left: 0 }}\n          x={xKey}\n          xDomain={[0, 15]}\n          xRange={({ height }) => [0, height / 2]}\n          data={thirdChart}\n        >\n          <Svg>\n            <AxisRadial/>\n            <Radar color={colors[1]}/>\n          </Svg>\n        </LayerCake>\n      </figure>\n      <figure id=\"radar-chart\" class=\"chart-container\">\n        <h3>{fourthChart[0].type}</h3>\n        <LayerCake\n          padding={{ top: 0, right: 0, bottom: 30, left: 0 }}\n          x={xKey}\n          xDomain={[0, 15]}\n          xRange={({ height }) => [0, height / 2]}\n          data={fourthChart}\n        >\n          <Svg>\n            <AxisRadial/>\n            <Radar color={colors[2]}/>\n          </Svg>\n        </LayerCake>\n      </figure>\n    </div>\n    \n</section>",
    "<script>\n\timport { geoAlbersUsa, geoPath } from \"d3-geo\";\n\timport { scaleQuantize, scaleSequential, scaleLinear } from \"d3-scale\";\n\timport { schemeOranges } from 'd3-scale-chromatic';\n\timport { extent, rollup } from \"d3-array\";\n\timport { csvParse } from 'd3-dsv'\n\timport { onMount } from \"svelte\";\n\timport { feature } from \"topojson\";\n\timport ChartTitle from '../tools/ChartTitle.svelte';\n\timport Icon from '../tools/Icon.svelte';\n\n\texport let data;\n\texport let title; \n\texport let description;\n\n\tconst citiesURL = 'https://gist.githubusercontent.com/curran/13d30e855d48cdd6f22acdf0afe27286/raw/0635f14817ec634833bb904a47594cc2f5f9dbf8/worldcities_clean.csv';\n\tconst stateURL = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\"\n\n\tlet newList = data;\n\tlet mapData = [];\n\t$: cities = [];\n\tconst keys = [4,8,12,16,20,24,28,32]\n\tconst colors = schemeOranges[8]\n\tlet colorScale = () => {};\n\tlet width = 1200\n\tlet height = width * 0.7\n\tlet showHide = 'true';\n\tlet toolTip = \"\";\n\t\n\t\n\tlet summary = rollup(data, v => v.length, d => d.state)\n\tlet orgExtent = extent(summary, d => d[1])\n\t\n\t$: colorScale = scaleQuantize()\n\t\t.domain(orgExtent)\n\t\t.range(colors);\n\n\tlet cityCount = rollup(data, v => v.length, d => d.city)\n\tlet cityExtent = extent(cityCount, d => d[1])\n\tconst radiusScale = scaleLinear()\n\t\t.domain(cityExtent)\n\t\t.range([2,20])\n\n\t$: getColor = function (feature) {\n\t\tlet number = summary.get(feature.properties.name)\n\t\tlet color = colorScale(number)\n\t\tif (color) {\n\t\t\treturn [color, number]\n\t\t} else {\n\t\t\treturn [\"#fff\", \"0\"]\n\t\t}\n\t}\n\n\tconst projectionAlbersUsa = geoAlbersUsa().scale(950)\n\tlet currentProj = projectionAlbersUsa;\n\t\n\tlet path = geoPath().projection(currentProj);\n\n\tconst makePoints = function(lng, lat) {\n\t\tlet points = currentProj([lng, lat])\n\t\treturn points\n\t}\n\n\tconst getRadius = function(cityName) {\n\t\tlet org = data.filter(d => d.city === cityName)\n\t\tlet radius = org.length\n\t\treturn radiusScale(radius)\n\t}\n\n\tconst handleToolTip = function(stateName) {\n\t\ttoolTip = stateName\n\t\treturn toolTip\n\t}\n\tconst handleMouseOut = function() {\n\t\ttoolTip = \"\"\n\t\treturn toolTip\n\t}\n\n  \n\tonMount(async function() {\n\t\tconst stateResponse = await fetch(\n\t\t\tstateURL\n\t\t);\n\t\tconst json = await stateResponse.json();\n\n\t\tconst cityResponse = await fetch(\n\t\t\tcitiesURL\n\t\t);\n\t\tconst csv = await cityResponse.text();\n\t\tlet parsed = csvParse(csv)\n\t\t$: cities = parsed.filter(d => d.country === \"United States\")\n\n\t\tconst topoData = feature(json, json.objects.states);\n\t\tconst land = {\n\t\t...topoData,\n\t\t};\n\t\tmapData = land.features;\n\t});\n</script>\n  \n<style lang=\"scss\">.chart-section {\n  background-color: #bdbed1; }\n\n#map-wrapper {\n  width: 1000px;\n  height: 500px; }\n\n.state__shape {\n  stroke: #708090;\n  stroke-width: 0.15;\n  transition: all .5s ease-in-out; }\n\n.state__shape:hover {\n  stroke: #E26D5A;\n  stroke-width: 1.5px; }\n\n.state__info__name {\n  font-family: 'Montserrat Alternates', sans-serif;\n  font-size: 1.2rem;\n  transform: translate(0, 250px); }\n\n.state__info__number {\n  transform: translate(0, 270px); }\n\n.not-filled {\n  opacity: .2;\n  pointer-events: none;\n  color: #000; }\n\n.cities {\n  opacity: .7; }\n\n.city {\n  fill: #FAAB18; }\n\n.chart-container {\n  position: relative;\n  overflow: visible; }\n\n.map-key {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  transform: translate(0, 30px); }\n  .map-key .keys {\n    display: flex; }\n    .map-key .keys .boxes {\n      width: 40px;\n      height: 10px;\n      overflow: visible;\n      margin-bottom: 8px; }\n      .map-key .keys .boxes p {\n        font-size: 0.6em;\n        transform: translate(16px, -12px); }</style>\n  \n<section class=\"chart-section\">\n\t<ChartTitle \n\t\ttitle={title}\n\t\tdescription= {description}\n\t/>\n\t<div class=\"input-container\">\n\t\t<label><input type=\"radio\" bind:group={showHide} value=\"true\"/>Hide Cities</label>\n\t\t<label><input type=\"radio\" bind:group={showHide} value=\"false\"/>Show Cities</label>\n\t</div>\n\t<div class=\"chart-container\" id=\"map-wrapper\" bind:clientWidth=\"{width}\">\n\t\t<svg style=\"{`width: ${width}px; height: ${height}px`}\">\n\t\t\t<g class=\"states\">\n\t\t\t\t{#each mapData as feature}\n\t\t\t\t\t<g \n\t\t\t\t\t\tclass=\"state\" \n\t\t\t\t\t\tid={feature.properties.name}\n\t\t\t\t\t\ton:mouseover={handleToolTip(feature.properties.name)} \n\t\t\t\t\t\ton:mouseout={handleMouseOut}\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tdata-tooltip=\"{feature.properties.name}: {getColor(feature)[1]}\"\n\t\t\t\t\t\t\td={path(feature)}\n\t\t\t\t\t\t\tclass=\"state__shape\"\n\t\t\t\t\t\t\tfill={getColor(feature)[0]} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if toolTip === feature.properties.name}\n\t\t\t\t\t\t\t<g class=\"state_info\">\n\t\t\t\t\t\t\t\t<text class=\"state__info__name\">{feature.properties.name}:</text>\n\t\t\t\t\t\t\t\t<text class=\"state__info__number\">{getColor(feature)[1]} BSO(s)</text>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</g>\n\t\t\t\t{/each}\n\t\t\t</g>\n\t\t\t{#if showHide === 'false'}\n\t\t\t<g class=\"cities\">\n\t\t\t\t{#each cities as city}\n\t\t\t\t\t{#if data.some(org => org.city === city.city)}\n\t\t\t\t\t\t<circle class=\"city\" cx={makePoints(city.lng, city.lat)[0]} cy={makePoints(city.lng, city.lat)[1]} r={getRadius(city.city)} />\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t</g>\n\t\t\t{/if}\n\t\t</svg>\n\t\t<div class=\"map-key\">\n\t\t\t<div class=\"keys\">\n\t\t\t\t{#each colors as color, index}\n\t\t\t\t\t\t<div class=\"boxes\" style=\"background-color: {color};\"><p>{keys[index]}</p></div>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t\t<p>Number of Orgs in State</p>\n\t\t</div>\n\t</div>\n</section>",
    "<script></script>\n\n<style lang=\"scss\">.header {\n  position: fixed;\n  top: 0;\n  z-index: 100;\n  width: 100vw;\n  height: 64px;\n  padding: 0 2em 0 2em;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: #1D1E68;\n  background-color: rgba(255, 255, 255, 0.9);\n  -webkit-backdrop-filter: blur(3px);\n          backdrop-filter: blur(3px); }\n  .header h3 {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    text-align: center;\n    min-width: 100px;\n    pointer-events: none; }\n    .header h3 em {\n      color: #00B8D1; }\n  .header img {\n    min-width: 100px;\n    max-height: 32px; }\n  .header ul {\n    list-style-type: none;\n    display: flex; }\n    .header ul li {\n      padding: 0 1em 0 1em; }\n      .header ul li a {\n        font-size: 1rem;\n        text-decoration: none;\n        color: #1D1E68; }</style>\n\n<div class=\"header\">\n    <a href=\"https://blackinnovationalliance.com/\">\n        <img src=\"./assets/images/BIA_Logo.png\" alt=\"bia-logo\">\n    </a>\n    <h3>Black Innovation Cens<em>Us</em></h3>\n    <nav>\n        <ul>\n            <li><a href=\"#geography\">Place</a></li>\n            <li><a href=\"#service\">Service</a></li>\n            <li><a href=\"#innovators\">Audience</a></li>\n        </ul>\n    </nav>\n</div>",
    "<script>\n    import Header from './Header.svelte'\n    import Ripple from '../tools/Ripple.svelte'\n    import Copy from '../../data/doc.json'\n    import gsap from 'gsap'\n    import { onMount } from 'svelte'\n    let y;\n\n    // onMount(() => {\n    //     let textWrapper = document.querySelector('.intro__area__title');\n    //     textWrapper.innerHTML = textWrapper.textContent.replace(/\\S/g, \"<span class='letter'>$&</span>\");\n\n    //     let tl = gsap.timeline({delay: .25})\n    //     tl.fromTo(\".letter\", \n    //     { \n    //         opacity: 0\n    //     },\n    //     { \n    //         opacity: 1,\n    //         stagger: { \n    //                 amount: .5, \n    //                 grid: 'auto',\n    //                 ease: 'power3.out', \n    //             }\n    //     }\n    //     )\n    // })\n</script>\n\n<style lang=\"scss\">.intro {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  overflow: hidden; }\n  .intro #intro__copy-wrapper {\n    height: 60vh;\n    align-items: flex-start;\n    gap: 2em;\n    z-index: 2; }\n    .intro #intro__copy-wrapper h1 {\n      font-size: 5rem; }\n    .intro #intro__copy-wrapper p {\n      font-size: 1.1rem;\n      padding-right: 10em;\n      line-height: 1.5; }\n  .intro__area {\n    width: 50vw;\n    height: 100vh;\n    padding: 0 3em;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: left; }\n    .intro__area .img-container {\n      position: relative;\n      overflow: hidden;\n      height: 100vh;\n      width: 50vw; }\n      .intro__area .img-container img {\n        position: absolute;\n        top: 0%;\n        left: 0%;\n        max-width: 200%;\n        width: 100%;\n        transition: transform ease-in-out; }\n  .intro__cta {\n    width: 100%;\n    height: 100%;\n    display: flex; }\n    .intro__cta button {\n      margin-right: 32px; }\n\n#lead-in {\n  position: relative;\n  padding: 4em 2em;\n  border-radius: 10px;\n  color: #fff;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  overflow: hidden; }\n  #lead-in .bk {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-image: url(\"../assets/images/BIA_Pattern_Wakanda.jpg\");\n    z-index: -1; }\n  #lead-in img {\n    max-width: 400px; }\n  #lead-in p {\n    max-width: 600px;\n    line-height: 1.7; }</style>\n\n<svelte:window bind:scrollY={y} />\n\n<Header/>\n<section class=\"intro\">\n    <div class=\"intro__area\" id=\"intro__copy-wrapper\">\n        <h1 class=\"intro__area__title\">Pathways to Prosperity</h1>\n        <p class=\"intro__area__description\">\n            {Copy.opening}\n        </p>\n        <div class=\"intro__cta\">\n            <button class=\"cta-btn\">Read the Story</button>\n            <button class=\"cta-btn-alt\">Submit your Org</button>\n        </div>\n    </div>\n    <div class=\"intro__area\">\n        <Ripple\n            top={\"25vh\"}\n            right={\"45vh\"}\n        />\n        <Ripple\n            top={\"45vh\"}\n            right={\"25vh\"}\n            \n        />\n        <Ripple\n            top={\"65vh\"}\n            right={\"5vh\"}\n            \n        />\n        <div class=\"img-container\">\n            <!-- <img style=\"transform: translate3d(0, -{y/100}%, 0) scale({(100+y/15)/100})\" src=\"./assets/images/black-up.jpg\" alt=\"Black Female\"> -->\n            <img src=\"./assets/images/black-up.jpg\" alt=\"Black Female\">\n        </div>\n    </div>\n</section>\n<article>\n    <div id=\"lead-in\">\n        <img src=\"./assets/images/King.png\" alt=\"Dr.King\">\n        <p>{Copy.leadIn}</p>\n        <div class=\"bk\"></div>\n    </div>\n</article>\n",
    "<script>\n  import { fade } from 'svelte/transition'\n  import { gsap } from 'gsap'\n  import Smoke from '../tools/Smoke.svelte'\n  import { onMount } from 'svelte';\n\n  export let visible;\n\n  onMount(() => {\n    // Simple GSAP for Symbols\n    gsap.to(\".cls-1\", \n      { \n        \"stroke-dashoffset\": 0,\n        duration: 6,\n        ease: \"power4.inOut\"\n      })\n  }) \n</script>\n\n<style lang=\"scss\">#pre-loader {\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n#icon-container {\n  width: 100%;\n  height: 100vh;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n  #icon-container .icon {\n    max-width: 225px;\n    margin: 1em; }\n  #icon-container .cls-1 {\n    fill: none;\n    stroke: #fff;\n    stroke-width: .75px;\n    stroke-miterlimit: 10;\n    stroke-dasharray: 600;\n    stroke-dashoffset: 600;\n    fill-opacity: 0; }</style>\n\n<div \n  id=\"pre-loader\"\n  transition:fade=\"{{delay: 4000}}\"\n  on:introstart=\"{() => visible = false}\"\n  on:outroend=\"{() => visible = true}\"\n>\n  <Smoke/>\n  <div id=\"icon-container\">\n    <svg class=\"icon\" id=\"action\" viewBox=\"0 0 98.04 98.04\">\n      <path class=\"cls-1\" d=\"M34.45,59.08,21.89,66.92a18.62,18.62,0,0,0,8.27,2l10.42-.53,2.29-1.43A20.39,20.39,0,0,1,34.45,59.08Z\"/>\n      <path class=\"cls-1\" d=\"M42.87,30.36l-2.29-1.43L30.16,28.4a18.62,18.62,0,0,0-8.27,2l12.56,7.85A20.41,20.41,0,0,1,42.87,30.36Z\"/>\n      <path class=\"cls-1\" d=\"M72.19,48.67l0,0,0,0L42.87,30.36a20.41,20.41,0,0,0-8.42,7.85L51.21,48.67,34.45,59.08a20.39,20.39,0,0,0,8.42,7.84Z\"/>\n      <path class=\"cls-1\" d=\"M49.46,1.08A47.72,47.72,0,1,0,97.17,48.8,47.73,47.73,0,0,0,49.46,1.08Zm-36,58a20.33,20.33,0,0,1-2.93-10.33s0,0,0-.08v-.05c0-.09,0-.1,0-.09a20.3,20.3,0,0,1,2.93-10.32L30.14,48.62ZM93.13,48.64l0,0L61.56,68.35l-10.42.53a18.65,18.65,0,0,1-8.27-2l-2.29,1.43-10.42.53a18.62,18.62,0,0,1-8.27-2l12.56-7.84a20.53,20.53,0,0,1-2.93-10.33s0,0,0-.08v-.05c0-.09,0-.1,0-.09a20.49,20.49,0,0,1,2.93-10.32L21.89,30.36a18.62,18.62,0,0,1,8.27-2l10.42.53,2.29,1.43a18.65,18.65,0,0,1,8.27-2l10.42.53L93.09,48.62Z\"/>\n    </svg>\n    <svg class=\"icon\" id=\"welcoming\" viewBox=\"0 0 98.04 98.04\">\n      <path class=\"cls-1\" d=\"M49.21,83.82,69.13,51.9l.54-10.55a18.83,18.83,0,0,0-2-8.37L49.21,62.58l0,0,0,0L30.68,33a18.83,18.83,0,0,0-2,8.37l.54,10.55L49.16,83.82l0,0Z\"/>\n      <circle class=\"cls-1\" cx=\"49.46\" cy=\"48.8\" r=\"47.71\"/>\n      <path class=\"cls-1\" d=\"M53.86,23.54,49.22,31l-4.64-7.43a5.65,5.65,0,0,0-7.78-1.8h0A5.66,5.66,0,0,0,35,29.53L49.17,52.22,63.44,29.53a5.66,5.66,0,0,0-1.8-7.79h0A5.65,5.65,0,0,0,53.86,23.54Z\"/>\n      <polygon class=\"cls-1\" points=\"45.72 17.31 49.17 22.84 52.65 17.31 45.72 17.31\"/>\n    </svg>\n    <svg class=\"icon\" id=\"prescient\" viewBox=\"0 0 98.04 98.04\">\n      <path class=\"cls-1\" d=\"M49.46,1.08A47.72,47.72,0,1,0,97.17,48.8,47.73,47.73,0,0,0,49.46,1.08Zm35.61,48.6C85,59.16,77.31,67.37,67.83,67.37l-9.16-.47-9-5.64-9,5.64-9.15.47c-9.49,0-17.18-8.21-17.24-17.69,0,0,0,0,0-.07v0c0-.08,0-.09,0-.08C14.26,40,22,31.8,31.44,31.8l9.15.47,9,5.64,9-5.64,9.16-.47C77.31,31.8,85,40,85.07,49.49v.19Z\"/>\n      <path class=\"cls-1\" d=\"M68.3,49.57,49.63,37.91,30.9,49.57l0,0L49.63,61.26ZM49.43,55a5.69,5.69,0,1,1,5.69-5.69A5.68,5.68,0,0,1,49.43,55Z\"/>\n      <path class=\"cls-1\" d=\"M49.46,1.08A47.72,47.72,0,1,0,97.17,48.8,47.73,47.73,0,0,0,49.46,1.08Zm35.61,48.6C85,59.16,77.31,67.37,67.83,67.37l-9.16-.47-9-5.64-9,5.64-9.15.47c-9.49,0-17.18-8.21-17.24-17.69,0,0,0,0,0-.07v0c0-.08,0-.09,0-.08C14.26,40,22,31.8,31.44,31.8l9.15.47,9,5.64,9-5.64,9.16-.47C77.31,31.8,85,40,85.07,49.49v.19Z\"/>\n    </svg>\n    <svg class=\"icon\" id=\"humble\" viewBox=\"0 0 98.04 98.04\">\n      <path class=\"cls-1\" d=\"M55.43,67.21,55,58.06l-5.64-9L55,40l.47-9.16A17,17,0,0,0,49,17.69a17,17,0,0,0-6.41,13.13L43.08,40l5.64,9-5.64,9-.47,9.15A17,17,0,0,0,49,80.35,17,17,0,0,0,55.43,67.21Z\"/>\n      <path class=\"cls-1\" d=\"M49.11,38.77l0,0L37.52,20.2l-6.7-.34c-9.48,0-17.17,8.21-17.24,17.69v.19A18.08,18.08,0,0,0,17.69,49a17,17,0,0,1,13.13-6.41l9.16.47,9,5.64,9-5.64,9.15-.47A17,17,0,0,1,80.35,49a18.07,18.07,0,0,0,4.1-11.28s0,0,0-.07v-.05c0-.08,0-.08,0-.07-.06-9.48-7.75-17.69-17.24-17.69l-6.5.33Z\"/>\n      <path class=\"cls-1\" d=\"M67.21,55.43,58.06,55l-9-5.64L40,55l-9.16.47A17,17,0,0,1,17.69,49,18,18,0,0,0,13.58,60.3v.19c.07,9.47,7.76,17.69,17.24,17.69l6.71-.34L49.09,59.31,60.7,77.85l6.51.33c9.49,0,17.18-8.22,17.24-17.69,0,0,0,0,0-.07v-.05c0-.08,0-.08,0-.07A18,18,0,0,0,80.35,49,17,17,0,0,1,67.21,55.43Z\"/>\n      <path class=\"cls-1\" d=\"M67.21,42.61l-9.15.47-9,5.64-9-5.64-9.16-.47A17,17,0,0,0,17.69,49a17,17,0,0,0,13.13,6.41L40,55l9-5.64,9,5.64,9.15.47A17,17,0,0,0,80.35,49,17,17,0,0,0,67.21,42.61Z\"/>\n      <circle class=\"cls-1\" cx=\"49.46\" cy=\"48.8\" r=\"47.71\"/>\n    </svg>\n    <svg class=\"icon\" id=\"bright\" viewBox=\"0 0 98.04 98.04\">\n      <path class=\"cls-1\" d=\"M49.46,1.08A47.72,47.72,0,1,0,97.17,48.8,47.73,47.73,0,0,0,49.46,1.08Zm34,47.45,0,0-9.93,6.19,5.69,10.63h0v0l-11.73.39-.41,12v0h0L56.7,72.3,50.34,82.54l0,0v0l-6.19-10L33.51,78.22h0v0l-.4-11.69-12-.4,0,0,5.5-10.35L16.32,49.36l10-6.19L20.64,32.56l11.7-.43.39-12h0v0L43.1,25.61l6.38-10.22v0l6.2,10,10.63-5.69,0,0,.38,11.72,12,.42h0v0l-5.5,10.33,10.2,6.36Z\"/>\n      <path class=\"cls-1\" d=\"M58.89,43.31A10.07,10.07,0,0,0,60.4,38l0-.39h0a10.25,10.25,0,0,0-5.52,1.94,10.09,10.09,0,0,0-1.33-5.33L53.38,34l-.15,0a10.25,10.25,0,0,0-3.72,4.37,10,10,0,0,0-3.82-3.94l-.23-.12-.16,0a10.16,10.16,0,0,0-1,5.64A10.12,10.12,0,0,0,39,38.46l-.34,0,0,.05A10.2,10.2,0,0,0,40.52,44a10,10,0,0,0-5.32,1.33l-.33.21a10.19,10.19,0,0,0,4.43,3.81,10.12,10.12,0,0,0-3.95,3.82l-.17.34a10.24,10.24,0,0,0,5.74,1.09,10.07,10.07,0,0,0-1.51,5.28l0,.39a10.24,10.24,0,0,0,5.51-1.94,10.07,10.07,0,0,0,1.34,5.33l.21.33a10.24,10.24,0,0,0,3.81-4.43,10,10,0,0,0,3.82,3.94l.34.18a10.24,10.24,0,0,0,1.09-5.74,10.07,10.07,0,0,0,5.28,1.51l.38,0a10.21,10.21,0,0,0-1.93-5.52,10.09,10.09,0,0,0,5.33-1.33l.33-.21a10.27,10.27,0,0,0-4.44-3.81,10.06,10.06,0,0,0,4-3.82l.18-.34A10.26,10.26,0,0,0,58.89,43.31Z\"/>\n    </svg>\n  </div>\n</div>",
    "<script>\nexport let title;\nexport let description;\n</script>\n\n\n<style lang=\"scss\">.chart__copy {\n  max-width: 800px; }\n  .chart__copy__title {\n    margin-bottom: 8px; }\n  .chart__copy__description {\n    margin-bottom: 32px; }</style>\n\n<div class=\"chart__copy\">\n    <h2 class=\"chart__copy__title\">{title}</h2>\n    <p class=\"chart__copy__description\">{description}</p>\n</div>",
    "<script>\n  import feather from \"feather-icons\";\n  export const directions = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  export let name;\n  export let direction = \"n\";\n  export let strokeWidth;\n  export let stroke;\n  export let width = \"1em\";\n  export let height = \"1em\";\n\n  $: icon = feather.icons[name];\n  $: rotation = directions.indexOf(direction) * 45;\n  $: if (icon) {\n    if (stroke) icon.attrs[\"stroke\"] = stroke;\n    if (strokeWidth) icon.attrs[\"stroke-width\"] = strokeWidth;\n  }\n</script>\n\n{#if icon}\n  <svg\n    {...icon.attrs}\n    style=\"width: {width}; height: {height}; transform: rotate({rotation}deg);\"\n  >\n    <g>\n      {@html icon.contents}\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n    overflow: visible;\n    transform-origin: 50% 50%;\n  }</style>\n",
    "<script>\n    import {select} from 'd3-selection'\n    import { gsap } from 'gsap';\n    import { onMount } from 'svelte';\n    \n    export let top;\n    export let right;\n    //export let timeDelay = 0;\n\n    let circles;\n    \n    onMount(() => {\n        for(let i=0; i < 600; i++) {     \n            const circle = document.createElement('div')\n            circle.classList.add('circle')\n            circles.appendChild(circle)\n        }\n\n        const t1 = gsap.timeline({ repeat: -1, yoyo: true })\n\n        t1.fromTo( '.circle', \n            { \n                scale: .7\n            }, \n            { \n                scale: 0,\n                duration: 2,\n                stagger: { \n                    amount: 1, \n                    grid: 'auto',\n                    ease: 'circ.inOut', \n                    from: 'right'\n                }\n            }\n        )\n    })\n    \n    \n</script>\n    \n<style>\n    .arrow {\n        position: absolute;\n        width: 150px;\n        height: 150px;\n        -webkit-clip-path: polygon(0 1%, 100% 50%, 0 100%, 43% 50%);\n                clip-path: polygon(0 1%, 100% 50%, 0 100%, 43% 50%);\n        display: flex;\n        flex-wrap: wrap;\n        z-index: 100;\n    }\n\n    :global(.circle) {\n        width: 4px;\n        height: 4px;\n        border-radius: 50%;\n        display: inline-block;\n        background-color: #fff;\n        margin: 2px;\n    }</style>\n\n<div class=\"intro__background\">      \n    <div style=\"top:{top}; right:{right}\" class=\"arrow\" bind:this={circles}></div>       \n</div>",
    "<script>\n    import * as THREE from 'three';\n    import { onMount } from 'svelte'\n    \n    let clock;\n    let smokeParticles;\n    let delta;\n    let mesh;\n    let cubeSineDriver;\n    let renderer;\n    let camera;\n    let scene;\n    let geometry;\n    let material;\n    let light;\n    let smokeTexture;\n    let smokeMaterial;\n    let smokeGeo;\n    let sp;\n   \n    init();\n    animate();\n\n\n    function init() {\n        clock = new THREE.Clock();\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        scene = new THREE.Scene();\n\n        camera = new THREE.PerspectiveCamera(\n            75,\n            window.innerWidth / window.innerHeight,\n            1,\n            10000\n        );\n        camera.position.z = 1000;\n        scene.add(camera);\n\n        geometry = new THREE.BoxGeometry(200, 200, 200);\n        material = new THREE.MeshLambertMaterial({\n            color: 0xaa6666,\n            wireframe: false\n        });\n        mesh = new THREE.Mesh(geometry, material);\n        cubeSineDriver = 0;\n\n        light = new THREE.DirectionalLight(0xffffff, 0.5);\n        light.position.set(-1, 0, 1);\n        scene.add(light);\n\n        smokeTexture = new THREE.TextureLoader().load(\n            \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/95637/Smoke-Element.png\"\n        );\n        smokeMaterial = new THREE.MeshLambertMaterial({\n            color: 0x00dddd,\n            map: smokeTexture,\n            transparent: true\n        });\n        smokeGeo = new THREE.PlaneGeometry(300, 300);\n        smokeParticles = [];\n\n        for (let p = 0; p < 150; p++) {\n            var particle = new THREE.Mesh(smokeGeo, smokeMaterial);\n            particle.position.set(\n            Math.random() * 500 - 250,\n            Math.random() * 500 - 250,\n            Math.random() * 1000 - 100\n            );\n            particle.rotation.z = Math.random() * 360;\n            scene.add(particle);\n            smokeParticles.push(particle);\n        }\n\n        onMount(() => {\n            document.getElementById('canvas-container').appendChild(renderer.domElement)\n        })\n    }\n\n    function animate() {\n        delta = clock.getDelta();\n        requestAnimationFrame(animate);\n        evolveSmoke();\n        render();\n    }\n\n    function evolveSmoke() {\n        sp = smokeParticles.length;\n        while (sp--) {\n            smokeParticles[sp].rotation.z += delta * 0.2;\n        }\n    }\n\n    function render() {\n        mesh.rotation.x += 0.005;\n        mesh.rotation.y += 0.01;\n        cubeSineDriver += 0.01;\n        mesh.position.z = 100 + Math.sin(cubeSineDriver) * 500;\n        renderer.render(scene, camera);\n    }\n\n</script>\n\n\n<style>\n    #canvas-container {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n    }</style>\n\n<div id=\"canvas-container\"></div>",
    "<script>\n    import { rollup } from 'd3-array'\n    export let data;\n    export let category;\n    export let dataPoint;\n    export let info;\n\n    const percentageOfCategory = () => {\n        let sum = 0;\n        let name;\n\n        let summary = rollup(data, v => v.length, d => d[category])\n        let flatData = Array.from(summary, ([variable, value]) => ({ variable, value }))\n        for(let i = 0; i < flatData.length; i++){\n            sum += flatData[i].value;\n        }\n        let percent = (summary.get(\"Founders/Entrepreneurs\") / sum) * 100\n        return Math.floor(percent)\n    }\n\n\n\n</script>\n\n<style lang=\"scss\">.stat-container {\n  width: 100%;\n  height: 120px;\n  display: flex;\n  align-items: center;\n  background-color: #1D1E68;\n  color: #fff;\n  border-radius: 10px;\n  padding: 4em; }\n  .stat-container .stat {\n    font-size: 5rem;\n    padding-right: 1em; }</style>\n\n<div class=\"stat-container\">\n    <h1 class=\"stat\">{percentageOfCategory()}%</h1>\n    <h3 class=\"info\">{info}</h3>\n</div>",
    "<style lang=\"scss\" global>:global(*) {\n  box-sizing: border-box;\n  scroll-behavior: smooth; }\n\n:global(html),\n:global(body),\n:global(div),\n:global(span),\n:global(applet),\n:global(object),\n:global(iframe),\n:global(h1),\n:global(h2),\n:global(h3),\n:global(h4),\n:global(h5),\n:global(h6),\n:global(p),\n:global(blockquote),\n:global(pre),\n:global(a),\n:global(abbr),\n:global(acronym),\n:global(address),\n:global(big),\n:global(cite),\n:global(code),\n:global(del),\n:global(dfn),\n:global(em),\n:global(img),\n:global(ins),\n:global(kbd),\n:global(q),\n:global(s),\n:global(samp),\n:global(small),\n:global(strike),\n:global(strong),\n:global(sub),\n:global(sup),\n:global(tt),\n:global(var),\n:global(b),\n:global(u),\n:global(i),\n:global(center),\n:global(dl),\n:global(dt),\n:global(dd),\n:global(ol),\n:global(ul),\n:global(li),\n:global(fieldset),\n:global(form),\n:global(label),\n:global(legend),\n:global(table),\n:global(caption),\n:global(tbody),\n:global(tfoot),\n:global(thead),\n:global(tr),\n:global(th),\n:global(td),\n:global(article),\n:global(aside),\n:global(canvas),\n:global(details),\n:global(embed),\n:global(figure),\n:global(figcaption),\n:global(footer),\n:global(header),\n:global(hgroup),\n:global(menu),\n:global(nav),\n:global(output),\n:global(ruby),\n:global(section),\n:global(summary),\n:global(time),\n:global(mark),\n:global(audio),\n:global(video) {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n:global(article),\n:global(aside),\n:global(details),\n:global(figcaption),\n:global(figure),\n:global(footer),\n:global(header),\n:global(hgroup),\n:global(main),\n:global(menu),\n:global(nav),\n:global(section) {\n  display: block; }\n\n:global(a) :global(img) {\n  border: none; }\n\n:global(blockquote) {\n  quotes: none; }\n\n:global(blockquote:before),\n:global(blockquote:after) {\n  content: \"\";\n  content: none; }\n\n:global(table) {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n:global(caption),\n:global(th),\n:global(td) {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle; }\n\n/*\n\n0 - 600px:          Phone\n600px - 900px       Table Portrait\n900px - 1200px      Table Landscape\n[1200px - 1800px]   Desktop Normal Styles\n1800px +            Big Desktop\n\n1em = 16px\n\nORDER: Base + Typography > Generar Layout + Grid > Page Layout > Components\n\n*/\n:global(h1), :global(h2), :global(h3) {\n  font-weight: 400;\n  font-family: 'Montserrat Alternates', sans-serif; }\n\n:global(h1) {\n  font-size: 3rem; }\n\n:global(h2) {\n  font-size: 2rem; }\n\n:global(h3) {\n  font-size: 1.2rem; }\n\n:global(p) {\n  font-weight: 200;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 1rem; }\n\n:global(a) {\n  font-family: 'Montserrat', sans-serif;\n  font-size: 0.8rem;\n  text-decoration: none; }\n\n:global(li) {\n  font-family: 'Montserrat', sans-serif; }\n\n:global(a),\n:global(a:link),\n:global(a:hover),\n:global(a:visited),\n:global(a:active) {\n  text-decoration: none; }\n\n:global(canvas) {\n  background-color: #221f26; }\n\n:global(section) {\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 4em; }\n\n:global(article) {\n  width: 100vw;\n  padding: 5em; }\n  :global(article) :global(.title), :global(article) :global(.subtitle) {\n    max-width: 60vw; }\n  :global(article) :global(.title) {\n    margin-bottom: 16px; }\n  :global(article) :global(.copy) {\n    display: flex;\n    align-items: center; }\n    :global(article) :global(.copy) :global(p) {\n      padding: 5em 20em;\n      font-size: 1.1rem;\n      line-height: 1.7; }\n      @media (max-width: 75em) {\n        :global(article) :global(.copy) :global(p) {\n          padding: 3em 8em; } }\n\n/* Call to Action Button */\n:global(.cta-btn) {\n  font-size: 0.8rem;\n  font-weight: 700;\n  display: inline-block;\n  position: relative;\n  padding: 1rem 2rem;\n  line-height: 1;\n  z-index: 1;\n  background-color: #FAAB18;\n  color: #fff;\n  border: none;\n  max-height: 56px;\n  border-radius: 18px; }\n\n:global(.cta-btn-alt) {\n  font-size: 0.8rem;\n  font-weight: 700;\n  display: inline-block;\n  position: relative;\n  padding: 1rem 2rem;\n  line-height: 1;\n  z-index: 1;\n  background-color: #1D1E68;\n  color: #fff;\n  border: none;\n  max-height: 56px;\n  border-radius: 18px; }\n\n:global(.chart-section) {\n  background-color: #ECE5F0;\n  color: #1D1E68;\n  padding: 5em;\n  border-radius: 10px; }\n  :global(.chart-section) :global(.chart__copy) {\n    max-width: 800px; }\n    :global(.chart-section) :global(.chart__copy__title) {\n      margin-bottom: 8px; }\n    :global(.chart-section) :global(.chart__copy__description) {\n      margin-bottom: 32px; }\n  :global(.chart-section) :global(.input-container) {\n    margin-right: 1em; }\n    :global(.chart-section) :global(.input-container) :global(label) {\n      background-color: #ECE5F0;\n      padding: 1em 2em;\n      border-radius: 10px;\n      font-family: 'Montserrat', sans-serif; }\n      :global(.chart-section) :global(.input-container) :global(label) :global(input) {\n        margin-right: 6px; }\n  :global(.chart-section) :global(.chart-container) {\n    height: 400px;\n    width: 800px;\n    overflow: hidden;\n    font-family: 'Montserrat', sans-serif; }\n    :global(.chart-section) :global(.chart-container) :global(svg) {\n      max-width: 100%; }\n    :global(.chart-section) :global(.chart-container) :global(.tick) :global(text) {\n      fill: #1D1E68; }</style>"
  ],
  "names": [],
  "mappings": "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"
}